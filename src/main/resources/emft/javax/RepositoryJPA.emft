/*[- */ fileNamePattern=%sRepositoryJPA.java /* -]*/
/*[- */ genfolder=java /* -]*/
/*[- */ subpackage=repository.jpa /* -]*/
/*[- */ appliesTo=Entity /* -]*/
package [(${clazz.epackage.name})].repository.jpa;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.NoResultException;
import javax.persistence.NonUniqueResultException;
import javax.persistence.PersistenceContext;
import javax.persistence.TypedQuery;

import [(${clazz.epackage.name})].domain.[(${clazz.name})];
import [(${clazz.epackage.name})].repository.[(${clazz.name})]Repository;
import [(${clazz.epackage.name})].web.dto.[(${clazz.name})]Criteria;



public class [(${clazz.name})]RepositoryJPA implements [(${clazz.name})]Repository {

	@PersistenceContext
	private transient EntityManager em;
	
	@Override
	public void insert ([(${clazz.name})] [(${#strings.toLowerCase(clazz.name)})]){
		em.persist([(${#strings.toLowerCase(clazz.name)})]);
	}
	
	@Override
	public void delete ([(${clazz.name})] [(${#strings.toLowerCase(clazz.name)})]){
		em.remove([(${#strings.toLowerCase(clazz.name)})]);
	} 
	
	@Override
	public void update ([(${clazz.name})] [(${#strings.toLowerCase(clazz.name)})]){
		em.merge([(${#strings.toLowerCase(clazz.name)})]);
	}
	
	@Override
	public [(${clazz.name})] findById([# emft:idJavaType="${clazz}"/] id){
		return em.find([(${clazz.name})].class, id);
	}
	
	@Override
	public List<[(${clazz.name})]> findByCriteria([(${clazz.name})]Criteria criteria){
		throw new UnsupportedOperationException();
	}
	
	@Override
	public Long getTotalRecords([(${clazz.name})]Criteria criteria){
		throw new UnsupportedOperationException();
	}
	
	@Override
	public List<[(${clazz.name})]> findAll(){
		throw new UnsupportedOperationException();
	}
}