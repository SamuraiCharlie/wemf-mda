/*[- */ fileNamePattern=%sService.java /* -]*/
/*[- */ genfolder=java /* -]*/
/*[- */ subpackage=service /* -]*/
/*[- */ appliesTo=Entity /* -]*/ 
package [(${clazz.epackage.name})].service;

import [(${clazz.epackage.name})].domain.[(${clazz.name})];
import [(${clazz.epackage.name})].repository.[(${clazz.name})]Repository;
import [(${clazz.epackage.name})].web.dto.[(${clazz.name})]Criteria;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import java.util.List;

@Service
@Transactional
@Component
public class [(${clazz.name})]Service {

	@Autowired
	[(${clazz.name})]Repository [# emft:lcc="${clazz}"/]Repository;
	
	public void insert ([(${clazz.name})] [# emft:lcc="${clazz}"/]){
		[# emft:lcc="${clazz}"/]Repository.insert([# emft:lcc="${clazz}"/]);
	}
	
	
	public void delete ([(${clazz.name})] [# emft:lcc="${clazz}"/]){
		[# emft:lcc="${clazz}"/]Repository.delete([# emft:lcc="${clazz}"/]);
	} 
	
	public void update ([(${clazz.name})] [# emft:lcc="${clazz}"/]){
		[# emft:lcc="${clazz}"/]Repository.update([# emft:lcc="${clazz}"/]);
	}
	
	public [(${clazz.name})] findById([# emft:idJavaType="${clazz}"/] id){
		return [# emft:lcc="${clazz}"/]Repository.findById(id);
	}
	[# emft:hasNoAnnotation="${clazz}" source="NoSearchFilter"]
	public List<[(${clazz.name})]> findByCriteria([(${clazz.name})]Criteria [# emft:lcc="${clazz}"/]Criteria){
		return [# emft:lcc="${clazz}"/]Repository.findByCriteria([# emft:lcc="${clazz}"/]Criteria);
	}
	
	public Long getTotalRecords([(${clazz.name})]Criteria [# emft:lcc="${clazz}"/]Criteria){
		return [# emft:lcc="${clazz}"/]Repository.getTotalRecords([# emft:lcc="${clazz}"/]Criteria);
	}
	[/]
	
	public List<[(${clazz.name})]> findAll(){
		return [# emft:lcc="${clazz}"/]Repository.findAll();
	}
	
}